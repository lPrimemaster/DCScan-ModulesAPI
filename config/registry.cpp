
////////////////////////////////////////
//    THIS FILE WAS AUTOGENERATED     //
//  ANY MODIFICATIONS WILL BE ERASED  //
////////////////////////////////////////
// Generated by the DCS pre-processor //
////////////////////////////////////////

#include "registry.h"

const DCS::Registry::SVParams DCS::Registry::GetParamsFromData(const unsigned char* payload, i16 size)
{
	i8  op_code   = convert_from_byte<i8>(payload, 0, size);  // First byte
	i16 func_code = convert_from_byte<i16>(payload, 1, size); // Second byte
	std::vector<std::any> args;

	// 0000 0000 | 0000 0000 0000 0000 | 0000 0000 ...
	// 0		   1		 2			 3         ...
	// (Opcode )   (     FuncCode    )   (   Args  ...

	// Evaluate arguments
	for(i16 it = 3; it < size;)
	{
		i8 arg_type = convert_from_byte<i8>(payload, it++, size);

		// TODO : Auto generate for any argument
		switch(arg_type)
		{
		case SV_ARG_int8:
			args.push_back(convert_from_byte<i8>(payload, it, size));
			it += sizeof(i8);
			break;
		case SV_ARG_float:
			break;
		case SV_ARG_bool:
			break;
		case SV_ARG_char:
			break;
		case SV_ARG_double:
			break;
		}
	}
	return DCS::Registry::SVParams(op_code, func_code, args);
}

void DCS::Registry::Execute(DCS::Registry::SVParams params)
{
	switch(params.getFunccode())
	{
	case SV_CALL_DCS_Network_Server_SendData:
		DCS::Network::Server::SendData(params.getArg<DCS::Network::Socket>(0),
			params.getArg<const unsigned char*>(1),
			params.getArg<DCS::i16>(2));
		break;
	default:
		DCS::Utils::Logger::Error("Function call id (%d) not found.", params.getFunccode());
		break;
	}
}

